<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="commuteMapper">

	<resultMap id="commute" type="commute">
		<id column="emp_no" property="empNo"/>
		<result column="work_date" property="workDate"/>
		<result column="start_time" property="startTime"/>
		<result column="end_time" property="endTime"/>
		<result column="after_time" property="afterTime"/>
		<result column="work_time" property="workTime"/>
		<result column="work_status" property="workStatus"/>
		<result column="off_no" property="offNo"/>
		<result column="off_cate_no" property="offCateNo"/>
		<result column="off_cate_name" property="offCateName"/>
		<result column="off_cate_day" property="offCateDay"/>
		<result column="off_given" property="offGiven"/>
		<result column="off_used" property="offUsed"/>
		<result column="off_available" property="offAvailable"/>
		<result column="off_start" property="offStart"/>
		<result column="off_end" property="offEnd"/>
		<result column="off_purpose" property="offPurpose"/>
		<result column="off_approval" property="offApproval"/>
		<result column="emp_id" property="empId"/>
		<result column="work_status_late" property="workStatusLate"/>
		<result column="work_status_early" property="workStatusEarly"/>
		<result column="work_status_off" property="workStatusOff"/>
		<result column="work_status_on" property="workStatusOn"/>
		<result column="work_status_sum" property="workStatusSum"/>
		<result column="work_time_avg" property="workTimeAvg"/>
		<result column="select_start_time" property="selectStartTime"/>
		<result column="select_end_time" property="selectEndTime"/>
	</resultMap>
	
	<!-- 사용자 휴가관리 조회 -->
	<select id="selectOffList" parameterType="_int" resultMap="commute">
		select
			   off_given
			 , off_used
			 , off_available
			 , off_cate_name
			 , off_start
			 , off_end
			 , off_cate_day
			 , off_purpose
		  from off
		  join employee using(emp_no)
		  join off_cate using(off_cate_no)
		 where emp_no = #{empNo}
		 order by off_start desc
	</select>
	
	<!-- 사용자 휴가 신청서 작성 -->
	<insert id="insertOff" parameterType="com.kh.oworks.commute.model.vo.Commute">
		insert
		  into off
		  	 (
			   off_no
			 , emp_no
			 , off_cate_no
			 , off_start
			 , off_end
			 , off_used
			 , off_purpose
			 , off_approval
		  	 )
		values
		 	 (
		 	   SEQ_OFNO.NEXTVAL
		 	 , #{empNo}
		 	 , #{offCateNo}
		 	 , #{offStart}
		 	 , #{offEnd}
		 	 , #{offUsed}
		 	 , #{offPurpose}
		 	 , '승인'
		 	 )
	</insert>
	
	<!-- 사용자 근무현황 조회 -->
	<select id="selectAdList" parameterType="String" resultMap="commute">
		select
			   emp_no
			 , work_date
			 , to_char(start_time, 'hh24":"mi":"ss') as start_time
			 , to_char(end_time, 'hh24":"mi":"ss') as end_time
			 , after_time
			 , work_time
		  from attendance
		 	   ${ condition }
	</select>

	<!-- 메인화면 퇴근시간 기록 -->
	<update id="updateEmpOut" parameterType="_int">
		update attendance
		   set
			   end_time = sysdate,
			   work_status = '정출'
		where emp_no = #{empNo}
		and to_char(work_date, 'YYYY-MM-DD') = to_char(sysdate, 'YYYY-MM-DD')
	</update>

	<!-- 메인화면 출근시간 기록 -->
	<insert id="insertEmpIn" parameterType="_int">
			insert
			  into attendance
			     (
			       emp_no
			     , work_date
			     , start_time
			     )
			values
			     (
			       #{empNo}
			     , sysdate
			     , sysdate
			     )
	</insert>
	
	<!-- 메인화면 근무현황 조회 (출퇴근시간 포함) -->
	<select id="selectEmpCommute" parameterType="_int" resultMap="commute">
		select 
		       emp_no
		     , emp_id
		     , count(case when work_status = '지각' then 1 else null end) as work_status_late
		     , count(case when work_status = '조퇴' then 1 else null end) as work_status_early
		     , count(case when work_status = '휴가' then 1 else null end) as work_status_off
		     , count(case when work_status = '정출' then 1 else null end) as work_status_on
		     , sum(work_time) as work_status_sum
		     , trunc(avg(work_time)) as work_time_avg
		     , to_char(start_time, 'hh24":"mi":"ss') as select_start_time
		     , to_char(end_time, 'hh24":"mi":"ss') as select_end_time
		  from attendance
		  join employee using(emp_no)
		 where emp_no = #{cEmpNo}
		   and to_char(work_date, 'YYYY-MM-DD') = to_char(sysdate, 'YYYY-MM-DD')
		 group by emp_no, emp_id, start_time, end_time
	</select>



</mapper>