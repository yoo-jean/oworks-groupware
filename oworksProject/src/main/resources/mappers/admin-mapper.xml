<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="adminMapper">

	<resultMap id="admin" type="admin">
		<id column="emp_no" property="empNo"/>
		<result column="work_date" property="workDate"/>
		<result column="dept_name" property="deptName"/>
		<result column="emp_name" property="empName"/>
		<result column="start_time" property="startTime"/>
		<result column="end_time" property="endTime"/>
		<result column="after_time" property="afterTime"/>
		<result column="work_time" property="workTime"/>
		<result column="work_status" property="workStatus"/>
		<result column="off_cate_no" property="offCateNo"/>
		<result column="off_cate_name" property="offCateName"/>
		<result column="off_cate_day" property="offCateDay"/>
		<result column="off_no" property="offNo"/>
		<result column="job_name" property="jobName"/>
		<result column="off_given" property="offGiven"/>
		<result column="off_used" property="offUsed"/>
		<result column="off_available" property="offAvailable"/>
		<result column="hire_date" property="hireDate"/>
		<result column="work_year" property="workYear"/>
		<result column="off_start" property="offStart"/>
		<result column="work_status_late" property="workStatusLate"/>
		<result column="work_status_early" property="workStatusEarly"/>
		<result column="work_status_off" property="workStatusOff"/>
		<result column="work_status_on" property="workStatusOn"/>
		<result column="work_status_sum" property="workStatusSum"/>
		<result column="work_time_avg" property="workTimeAvg"/>
	</resultMap>
	
	<!-- 근태통계 목록 갯수 -->
	<select id="selectEmpCount" resultType="_int">
		select
			   count(*)
		  from employee
	</select>
	
	<!-- 근태통계 조회 -->
	<select id="selectAdList" resultMap="admin" parameterType="String">
		select
		       emp_no
		     , dept_name
		     , job_name
		     , emp_name
		     , count(case when work_status = '지각' then 1 else null end) as work_status_late
		     , count(case when work_status = '조퇴' then 1 else null end) as work_status_early
		     , count(case when work_status = '휴가' then 1 else null end) as work_status_off
		     , count(case when work_status = '정출' then 1 else null end) as work_status_on
		     , off_given
		     , off_used
		     , off_available
		     , sum(work_time) as work_status_sum
		     , trunc(avg(work_time)) as work_time_avg
		  from attendance
		  join employee using(emp_no)
		  join off using(emp_no)
		  join job using(job_code)
		  join department using(dept_code)
		 	   ${condition}
		 group by emp_no, dept_name, job_name, emp_name, off_given, off_used, off_available
	</select>
	
	<!-- 일일출퇴근현황 목록 갯수 -->
	<select id="selectAdCount" resultType="_int">
		select
		       count(*)
		  from attendance
		  join employee using (emp_no)
		  join department using (dept_code)
		  where to_date(work_date, 'YY-MM-DD') = '${workDate}'
	</select>
	
	<!-- 일일출퇴근현황 조회 -->
	<select id="selectList" resultMap="admin" parameterType="String">
		select 
		       work_date
		     , dept_name
		     , emp_no
		     , emp_name
		     , start_time
		     , end_time
		     , work_time
		     , after_time
		     , work_status
		  from attendance
		  join employee using (emp_no)
		  join department using (dept_code)
		  where to_date(work_date, 'YY-MM-DD') = '${workDate}'
	</select>
	
	<!-- 휴가현황 목록 갯수 -->
	<select id="selectOffCount" resultType="_int">
		select
			   count(*)
		  from off
	</select>
	
	<!-- 휴가현황 조회 -->
	<select id="selectOffList" resultMap="admin" parameterType="String">
		select
		       emp_no
		     , dept_name
		     , job_name
		     , emp_name
		     , off_given
		     , sum(off_used) as off_used
		     , off_available
		     , hire_date
		     , off_start
		     , TRUNC(MONTHS_BETWEEN(SYSDATE, hire_date)/12,0) work_year
		  from employee
		  join department using(dept_code)
		  join job using(job_code)
		  join off using(emp_no)
		 	   ${ condition }
		 group by emp_no, dept_name, job_name, emp_name, off_given, off.off_used, off_available, hire_date, off_start
	</select>
	
	<!-- 휴가분류 조회 -->
	<select id="selectOffCate" resultMap="admin">
		select
			   off_cate_no
			 , off_cate_name
			 , off_cate_day
		  from off_cate
	</select>
	
	<!-- 휴가분류 작성  -->
	<select id="insertOffCate" resultMap="admin">
		insert
		  into off_cate
		  (
		    off_cate_no
		  , off_cate_name
		  , off_cate_day
		  )
		  values
		  (
		  	seq_ocno.nextval
		  , #{offCateName}
		  , #{offCateDay}
		  )
	</select>
	
	<!-- 휴가분류 삭제 -->
	<select id="deleteOffCate" parameterType="_int">
		delete
		  from off_cate
		 where off_cate_no = #{offCateNo}
	</select>







</mapper>


